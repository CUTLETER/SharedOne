<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.tobe.mapper.OrderMapper">

    <!-- jsy주문 전체 조회 -->
    <select id="getOrder" resultMap="GetOrderResultMap">
        select oh.order_no, c.customer_name, emp.employee_name,
        oh.confirm_status, oh.reg_date, emp.employee_id, emp.authority_grade
        from order_header oh
        join employee emp on emp.employee_id = oh.employee_id
        join customer c on c.customer_no = oh.customer_no
        join order_body ob on ob.order_no = oh.order_no
        <where>
            <if test="inputDate != null">
                and oh.reg_date = #{inputDate}
            </if>
            <if test="inputOrderNo != null">
                and cast(oh.order_no as text) like concat('%', #{inputOrderNo}, '%')
            </if>
            <if test="inputCustomerNo != null">
                and c.customer_no = #{inputCustomerNo}
            </if>
            <if test="inputManager != null">
                and emp.employee_name like concat('%', #{inputManager}, '%')
            </if>
            <if test="inputProdNo != null">
                and ob.product_no = #{inputProdNo}
            </if>
            <if test="inputState != null">
                and oh.confirm_status = #{inputState}
            </if>
        </where>
    </select>

    <resultMap id="GetOrderResultMap" type="OrderHDTO">
        <result column="order_no" property="orderNo"/> <!-- 주문번호 -->
        <result column="reg_date" property="regDate"/> <!-- 작성일 -->
        <result column="confirm_status" property="confirmStatus"/> <!-- 결재상태 -->
        <association property="employee" javaType="EmployeeDTO">
            <result column="employee_name" property="employeeName"/> <!-- 담당자명 -->
            <result column="employee_id" property="employeeId"/> <!-- 담당자명 -->
            <result column="authority_grade" property="authorityGrade"/> <!-- 담당자명 -->
        </association>
        <association property="customer" javaType="CustomerDTO">
            <result column="customer_name" property="customerName"/> <!-- 고객명 -->
        </association>
        <collection property="orderBList" javaType="OrderBDTO">
            <result column="product_no" property="productNo"/>
        </collection>
    </resultMap>

    <!-- 담당자명(작성자) 이름 -->
    <select id="getMyName" parameterType="string" resultType="string">
        select employee_name
        from employee
        where employee_id = #{myId}
    </select>


    <!--  jsy주문등록 - 고객 별 상품 조회  -->
    <select id="getPrice" resultMap="GetPriceResultMap">
        select p.product_no, p.product_name, p.product_writer, p.product_category,
        price.custom_price, price.start_date, price.end_date, price.price_no
        from price
        join product p on p.product_no=price.product_no
        join customer c on c.customer_no=price.customer_no
        join order_header oh on oh.customer_no = c.customer_no
        where price.activated = 'Y'
        and c.customer_no = #{iocn}
        and price.end_date &gt; now()
        <if test="delDate != null">
            and (#{delDate}::date) &lt; price.end_date
        </if>
    </select>

    <resultMap id="GetPriceResultMap" type="PriceDTO">
        <result column="price_no" property="priceNo"/>
        <result column="custom_price" property="customPrice"/>
        <result column="start_date" property="startDate"/>
        <result column="end_date" property="endDate"/>
        <association property="product" javaType="ProductDTO">
            <result column="product_no" property="productNo"/>
            <result column="product_category" property="productCategory"/>
            <result column="product_name" property="productName"/>
            <result column="product_writer" property="productWriter"/>
        </association>
    </resultMap>

    <!--  jsy주문등록 - 등록하기  -->
    <insert id="registOrderH" useGeneratedKeys="true" keyProperty="orderNo">
        insert into order_header(reg_date,
                                del_date,
                                confirm_status,
                                confirm_change_date,
                                customer_no,
                                employee_id,
                                confirmer_id)
        values (current_timestamp,
                #{delDate},
                #{confirmStatus},
                now(),
                #{customerNo},
                #{employeeId},
                #{confirmerId}
                )
        RETURNING order_no;
    </insert>
    <insert id="registOrderB" parameterType="java.util.List">
        insert into order_body(order_no, product_no, price_no, order_product_qty, prod_total)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.orderNo}, #{item.productNo}, #{item.priceNo}, #{item.orderProductQty}, #{item.prodTotal})
        </foreach>
    </insert>


    <!--유선화 START-->
    <!--상세 조회-->
    <select id="getOrderDetail" resultMap="OrderDetailResultMap">
        select
        oh.order_no,
        oh.reg_date,
        oh.del_date,
        oh.confirm_status,
        oh.confirm_change_date,
        oh.remarks,
        c.customer_no,
        c.customer_name,
        e.employee_id, --담당자 아이디
        e.employee_name, --담당자 이름
        e.authority_grade,
        ec.employee_id as confirmer_id, --결재자 아이디
        ec.employee_name as confirmer_name, --결재자 이름
        ob.price_no,
        ob.product_no,
        ob.order_product_qty,
        p.product_name,
        p.product_category,
        p.product_writer,
        coalesce(ob.price_no, pr.price_no) as price_no,
        coalesce(pr.custom_price, 0) as custom_price,
        pr.start_date,
        pr.end_date
        from
        order_header oh
        join customer c on oh.customer_no = c.customer_no
        join employee e on oh.employee_id = e.employee_id  -- 담당자 조인
        join employee ec on oh.confirmer_id = ec.employee_id  -- 결재자 조인
        join order_body ob on oh.order_no = ob.order_no
        join product p on ob.product_no = p.product_no
        left join price pr on p.product_no = pr.product_no and c.customer_no = pr.customer_no
        where
        oh.order_no = #{orderNo};
    </select>

    <resultMap id="OrderDetailResultMap" type="OrderHDTO">
        <id property="orderNo" column="order_no"/>
        <result property="regDate" column="reg_date"/>
        <result property="delDate" column="del_date"/>
        <result property="confirmStatus" column="confirm_status"/>
        <result property="confirmChangeDate" column="confirm_change_date"/>
        <result property="remarks" column="remarks"/>
        <result property="confirmerId" column="confirmer_id"/>
        <result property="confirmerName" column="confirmer_name"/>

        <association property="customer" javaType="CustomerDTO">
            <id property="customerNo" column="customer_no"/>
            <result property="customerName" column="customer_name"/>
        </association>

        <association property="employee" javaType="EmployeeDTO">
            <id property="employeeId" column="employee_id"/>
            <result column="employee_name" property="employeeName"/> <!-- 담당자명 -->
            <result column="authority_grade" property="authorityGrade"/> <!-- 담당자명 -->
        </association>

        <collection property="orderBList" ofType="OrderBDTO">
            <id property="orderNo" column="order_no"/>
            <id property="productNo" column="product_no"/>
            <result property="priceNo" column="price_no"/>
            <result property="orderProductQty" column="order_product_qty"/>

            <association property="product" javaType="ProductDTO">
                <id property="productNo" column="product_no"/>
                <result property="productName" column="product_name"/>
                <result property="productCategory" column="product_category"/>
                <result property="productWriter" column="product_writer"/>
            </association>

            <association property="price" javaType="PriceDTO">
                <id property="priceNo" column="price_no"/>
                <result property="customPrice" column="custom_price"/>
                <result property="startDate" column="start_date"/>
                <result property="endDate" column="end_date"/>
            </association>
        </collection>
    </resultMap>

    <!--결재 여부에 따른 업데이트-->
    <update id="updateApproval">
        UPDATE order_header
        SET confirm_status = #{confirmStatus},
        confirm_change_date = #{confirmChangeDate},
        remarks = #{remarks}  <!-- 비고 필드 추가 -->
        WHERE order_no = #{orderNo}
    </update>


    <!--주문 업데이트-->
    <update id="updateOrderHeader" parameterType="com.project.tobe.dto.OrderUp1DTO">
        UPDATE order_header
        SET del_date = #{delDate},
            confirm_change_date = #{confirmChangeDate}
        WHERE order_no = #{orderNo}
    </update>

    <delete id="deleteOrderDetails" parameterType="long">
        DELETE FROM order_body
        WHERE order_no = #{orderNo}
    </delete>

    <insert id="insertOrderDetail">
        INSERT INTO order_body (order_no, product_no, order_product_qty, price_no)
        VALUES (#{orderNo}, #{detail.productNo}, #{detail.orderProductQty}, #{detail.priceNo})
    </insert>


    <insert id="insertBack1" useGeneratedKeys="true" keyProperty="orderNo" parameterType="OrderUp1DTO">
        INSERT INTO order_header (reg_date, del_date, confirm_status, customer_no, employee_id)
        VALUES (CURRENT_TIMESTAMP, #{delDate}, '대기', #{customerNo}, #{employeeId})
    </insert>

    <insert id="insertBack2" parameterType="map">
        INSERT INTO order_body (order_no, product_no, order_product_qty, price_no)
        VALUES
        <foreach collection="orderBList" item="orderBody" separator=",">
            (#{orderNo}, #{orderBody.productNo}, #{orderBody.orderProductQty}, #{orderBody.priceNo})
        </foreach>
    </insert>

    <!--유선화 END-->
</mapper>
